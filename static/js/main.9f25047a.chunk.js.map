{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","list","newItem","this","id","Math","random","value","slice","push","setState","key","updatedList","filter","item","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","localStorage","hasOwnProperty","getItem","JSON","parse","e","setItem","stringify","className","type","placeholder","onChange","updateInput","target","onClick","addItem","disabled","length","map","deleteItem","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAkIeA,G,wDA/Hb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,KAAM,GACNC,QAAS,IALM,E,sDAUjB,GAA2B,KAAvBC,KAAKH,MAAME,QAAf,CAIA,IAAMA,EAAU,CACdE,GAAI,EAAIC,KAAKC,SACbC,MAAOJ,KAAKH,MAAME,QAAQM,SAGtBP,EAAI,YAAOE,KAAKH,MAAMC,MAE5BA,EAAKQ,KAAKP,GAEVC,KAAKO,SAAS,CACZT,OACAC,QAAS,Q,kCAIDS,EAAKJ,GACfJ,KAAKO,SAAL,eACGC,EAAMJ,M,iCAIAH,GACT,IAEMQ,EAFI,YAAOT,KAAKH,MAAMC,MAEHY,QAAO,SAAAC,GAAI,OAAIA,EAAKV,KAAOA,KAEpDD,KAAKO,SAAS,CAAET,KAAMW,M,0CAItBT,KAAKY,+BAELC,OAAOC,iBACL,eACAd,KAAKe,wBAAwBC,KAAKhB,S,6CAKpCa,OAAOI,oBACL,eACAjB,KAAKe,wBAAwBC,KAAKhB,OAGpCA,KAAKe,4B,qDAIL,IAAK,IAAIP,KAAOR,KAAKH,MACnB,GAAIqB,aAAaC,eAAeX,GAAM,CACpC,IAAIJ,EAAQc,aAAaE,QAAQZ,GAEjC,IACEJ,EAAQiB,KAAKC,MAAMlB,GACnBJ,KAAKO,SAAL,eAAiBC,EAAMJ,IACvB,MAAOmB,GAEPvB,KAAKO,SAAL,eAAiBC,EAAMJ,Q,gDAO7B,IAAK,IAAII,KAAOR,KAAKH,MACnBqB,aAAaM,QAAQhB,EAAKa,KAAKI,UAAUzB,KAAKH,MAAMW,O,+BAI9C,IAAD,OACP,OACE,sBAAKkB,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,2BACA,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,+CACA,uBACA,uBACEC,KAAK,OACLC,YAAY,oBACZxB,MAAOJ,KAAKH,MAAME,QAClB8B,SAAU,SAAAN,GAAC,OAAI,EAAKO,YAAY,UAAWP,EAAEQ,OAAO3B,UAEtD,wBACEsB,UAAU,cACVM,QAAS,kBAAM,EAAKC,WACpBC,UAAWlC,KAAKH,MAAME,QAAQoC,OAHhC,SAKE,mBAAGT,UAAU,iBAAb,mBAEF,uBACA,6BACG1B,KAAKH,MAAMC,KAAKsC,KAAI,SAAAzB,GACnB,OACE,+BACGA,EAAKP,MACN,wBACEsB,UAAU,MACVM,QAAS,kBAAM,EAAKK,WAAW1B,EAAKV,KAFtC,SAIE,mBAAGyB,UAAU,iBAAb,mBANKf,EAAKV,qB,GA7GdqC,cCUHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9f25047a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      list: [],\r\n      newItem: '',\r\n    };\r\n  }\r\n\r\n  addItem() {\r\n    if (this.state.newItem === \"\") {\r\n      return;\r\n    }\r\n\r\n    const newItem = {\r\n      id: 1 + Math.random(),\r\n      value: this.state.newItem.slice(),\r\n    };\r\n\r\n    const list = [...this.state.list];\r\n\r\n    list.push(newItem);\r\n\r\n    this.setState({\r\n      list,\r\n      newItem: \"\",\r\n    })\r\n  }\r\n\r\n  updateInput(key, value) {\r\n    this.setState({\r\n      [key]: value,\r\n    });\r\n  }\r\n\r\n  deleteItem(id) {\r\n    const list = [...this.state.list];\r\n\r\n    const updatedList = list.filter(item => item.id !== id);\r\n\r\n    this.setState({ list: updatedList });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.hydrateStateWithLocalStorage();\r\n\r\n    window.addEventListener(\r\n      \"beforeunload\",\r\n      this.saveStateToLocalStorage.bind(this),\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\r\n      \"beforeunload\",\r\n      this.saveStateToLocalStorage.bind(this),\r\n    );\r\n\r\n    this.saveStateToLocalStorage();\r\n  }\r\n\r\n  hydrateStateWithLocalStorage() {\r\n    for (let key in this.state) {\r\n      if (localStorage.hasOwnProperty(key)) {\r\n        let value = localStorage.getItem(key);\r\n\r\n        try {\r\n          value = JSON.parse(value);\r\n          this.setState({ [key]: value });\r\n        } catch (e) {\r\n          // Handle empty strings\r\n          this.setState({ [key]: value });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  saveStateToLocalStorage() {\r\n    for (let key in this.state) {\r\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className=\"app-title\">My To Do List</h1>\r\n        <div className=\"outline\">\r\n          <div className=\"container\">\r\n            <b>Add an Item...</b>\r\n            <br/>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Type item here...\"\r\n              value={this.state.newItem}\r\n              onChange={e => this.updateInput(\"newItem\", e.target.value)}\r\n            />\r\n            <button\r\n              className=\"add-btn btn\"\r\n              onClick={() => this.addItem()}\r\n              disabled={!this.state.newItem.length}\r\n            >\r\n              <i className=\"material-icons\"> + </i>\r\n            </button>\r\n            <br/>\r\n            <ul>\r\n              {this.state.list.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    {item.value}\r\n                    <button\r\n                      className=\"btn\"\r\n                      onClick={() => this.deleteItem(item.id)}\r\n                    >\r\n                      <i className=\"material-icons\">x</i>\r\n                    </button>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}